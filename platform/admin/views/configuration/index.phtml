<Row class-name="layout-breadcrumb">
    <Breadcrumb>
        <Breadcrumb-item href="#">系统管理</Breadcrumb-item>
        <Breadcrumb-item>参数配置</Breadcrumb-item>
    </Breadcrumb>
</Row>

<Row class-name="layout-filter">

    <i-form inline="true">
        <Form-item>数据筛选</Form-item>

        <Form-item>
            <i-input placeholder="KEY" v-model="searchFilter.key"></i-input>
        </Form-item>
        <Form-item>
            <i-input placeholder="KEY值" v-model="searchFilter.value"></i-input>
        </Form-item>
        <Form-item>
            <i-input placeholder="配置描述" v-model="searchFilter.desc"></i-input>
        </Form-item>


        <Form-item>
            <i-button type="primary" @click="loadList(1, pageSize)">搜索</i-button>
            <i-button @click="resetFilter">重置</i-button>
        </Form-item>
    </i-form>

</Row>


<Row class-name="layout-content">
    <i-col class-name="layout-data-list">

        <Row class-name="layout-content-title">
            <i-col span="12">
                <h3>参数配置</h3>
            </i-col>
            <i-col span="12" class-name="align-right">
                <Button-group>
                    <i-button @click="removeBatch" type="ghost" icon="trash-b">批量删除</i-button>
                    <i-button icon="android-create" type="ghost" v-on:click="openPostModal()">创建配置</i-button>
                </Button-group>

            </i-col>
        </Row>

        <i-table :columns="columns" :data="data" @on-selection-change="selectionChange" :border="true" @on-sort-change="remoteSort" stripe></i-table>


        <Row class="layout-content-page">
            <i-col span="10">

                <Button-group>
                    <!--                    <i-button @click="removeBatch" type="error" size="small" icon="trash-b">批量删除</i-button>-->
                    <!--                    <i-button @click="removeBatch" type="ghost" size="small" icon="ios-arrow-forward">批量移动</i-button>-->
                </Button-group>


            </i-col>
            <i-col span="14">
                <Row type="flex" justify="end">
                    <Page v-on:on-change="pageChange" size="small" v-on:on-page-size-change="sizeChange" :total="count" :page-size="pageSize" :current="page" show-elevator show-total></Page>
                </Row>
            </i-col>

        </Row>

    </i-col>
</Row>


<template>
    <Modal :mask-closable="false" width="50%" ref="postPanel" v-model="showPost" title="创建内容" @on-ok="handleSubmit('form2')" @on-cancel="handleReset('form2')">

        <i-form ref="form2" :model="formData" :rules="validation" label-width="140">
            <Form-item label="KEY" prop="key">
                <i-input v-model="formData.key" placeholder="请输入"></i-input>
            </Form-item>

            <Form-item label="KEY值" prop="value">
                <i-input v-model="formData.value" placeholder="请输入"></i-input>
            </Form-item>

            <Form-item label="描述" prop="desc">
                <i-input v-model="formData.desc" placeholder="请输入"></i-input>
            </Form-item>
        </i-form>

        <div slot="footer">
            <i-button type="ghost" @click="handleReset('form2')" style="margin-left: 8px">取消</i-button>
            <i-button type="primary" @click="handleSubmit('form2')">提交</i-button>
        </div>
    </Modal>
</template>

<script>
    (function () {
        "use strict";
        var configuration = new Janfish_DataList({
            el: "#app",
            methods: {
                afterPost: function (data) {
                    this.loadList(1, this.pageSize);
                },
                afterLoad: function (data) {
                    return data;
                },
                beforePost: function (data) {
                    return data;
                },
                handleSubmit: function (name) {
                    var _this = this;
                    if (_this.formLoaded === false) {
                        return false;
                    }
                    _this.$refs[name].validate(function (valid) {
                        if (valid) {
                            _this.$http.post(_this.api.post, qs.stringify(_this.beforePost(_this.formData))).then(function (response) {
                                if (response.status !== "success") {
                                    _this.$Message.error(response.message);
                                    return false;
                                }
                                _this.$Message.success('提交成功');
                                _this.afterPost(response.data);
                                _this.showPost = false;
                            });

                        } else {
                            _this.$Message.error('表单验证失败!');
                        }
                    });
                },
                handleReset: function (name) {
                    for (var i in this.formData) {
                        this.formData[i] = '';
                    }
                    if (this.showPost) {
                        this.showPost = false;
                    }
                    this.formLoaded = false;
                    this.$refs[name].resetFields();
                },
                openPostModal: function (id) {
                    var _this = this;
                    _this.$http.get(_this.api.post + '?id=' + id).then(function (response) {
                        if (response.status !== "success") {
                            _this.$Message.error(response.message);
                            return false;
                        }
                        _this.formData = _this.afterLoad(response.data.data);
                        _this.formLoaded = true;
                    });
                    this.showPost = true;
                }
            },
            data: {
                showPost: false,
                formData: {},
                validation: {
                    "key": [{"required": true, "message": "KEY不能为空", "trigger": "blur"}, {"type": "string", "max": 255, "message": "KEY长度应该在1-255", "trigger": "blur"}],
                    "value": [{"required": true, "message": "KEY值不能为空", "trigger": "blur"}, {"type": "string", "max": 255, "message": "KEY值长度应该在1-255", "trigger": "blur"}],
                    "desc": [{"required": false, "message": "配置描述不能为空", "trigger": "blur"}, {"type": "string", "max": 255, "message": "配置描述长度应该在1-255", "trigger": "blur"}]
                },
                api: {
                    search: '/configuration',
                    post: '/configuration/post',
                    remove: '/configuration/delete'
                },
                page: 1,
                pageSize: 12,
                searchFilter: {"id": "", "value": "", "key": "", "desc": ""},
                columns: [
                    {
                        type: 'selection',
                        width: 60,
                        align: 'center',
                        fixed: 'left'
                    },
                    {"sortable": "custom", "title": "Id", "width": 80, "key": "id"},
                    {"sortable": "custom", "title": "KEY", "key": "key"},
                    {"sortable": "custom", "title": "KEY值", "key": "value"},
                    {"sortable": "custom", "title": "配置描述", "key": "desc"},
                    {"sortable": "custom", "title": "创建时间", "key": "createdAt", "width": 160},
                    {"sortable": "custom", "title": "更新时间", "key": "updatedAt", "width": 160},
                    {
                        title: '操作',
                        width: 130,
                        align: 'center',
                        key: 'operation',
                        fixed: 'right',
                        render: function (h, params) {
                            return h('Row', [
                                h('Button', {
                                    props: {
                                        type: 'ghost',
                                        size: 'small'
                                    },
                                    style: {
                                        marginRight: '10px'
                                    },
                                    on: {
                                        click: function () {
                                            configuration.openPostModal(params.row.id);
                                        }
                                    }
                                }, '编辑'),
                                h('Button', {
                                    props: {
                                        type: 'ghost',
//                                        type: 'error',
                                        size: 'small'
                                    },
                                    style: {},
                                    on: {
                                        click: function () {
                                            configuration.remove(params.row.id);
                                        }
                                    }
                                }, '删除')
                            ])
                        }
                    }
                ]
            },
            mounted: function () {
                this.setActiveMenu(["2", "29"]);
            }
        });

    }());

</script>
